@model IEnumerable<int>
@{
    Layout = "~/Views/YESS_Layout.cshtml";
}

<section class="breadcrumb_part breadcrumb_bg">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <div class="breadcrumb_iner">
                    <div class="breadcrumb_iner_item" style="text-align:right">
                        <h2>התפלגות של רופאים לפי תחום התמחות</h2>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<!doctype html>
<html>

<head>
    <script src="~/Scripts/Chart.min.js"></script>
    <script src="~/Scripts/utils.js"></script>
    <style>
        canvas {
            -moz-user-select: none;
            -webkit-user-select: none;
            -ms-user-select: none;
        }
    </style>
</head>

<body>
    <div id="canvas-holder" style="width: 50%;border: 0;margin: 0 auto;">
        <canvas id="chart-area"></canvas>
    </div>

    <script>
		var randomScalingFactor = function() {
			return Math.round(Math.random() * 100);
		};

		var chartColors = window.chartColors;
		var color = Chart.helpers.color;
		var config = {
			data: {
				datasets: [{
					data: [

						@foreach (var item in Model) {

					   @(item.ToString() + ",")


                               }
					],
					backgroundColor: [
						color(chartColors.red).alpha(0.9).rgbString(),
						color(chartColors.orange).alpha(0.9).rgbString(),
						color(chartColors.yellow).alpha(0.9).rgbString(),
						color(chartColors.green).alpha(0.9).rgbString(),
						color(chartColors.blue).alpha(0.9).rgbString(),
                        color(chartColors.purple).alpha(0.9).rgbString(),
                        color(chartColors.gray).alpha(0.5).rgbString(),
                        color(chartColors.purple).alpha(0.5).rgbString(),
                        color(chartColors.blue).alpha(0.5).rgbString(),
                        color(chartColors.green).alpha(0.5).rgbString(),
                        color(chartColors.yellow).alpha(0.5).rgbString(),
                        color(chartColors.orange).alpha(0.5).rgbString(),
                        color(chartColors.red).alpha(0.5).rgbString(),
					],
					label: 'My dataset' // for legend
				}],
				labels: [
					'ילדים',
					'משפחה',
					'נשים',
					'עור',
					'אורטופדיה',
					'אף אוזן גרון',
					'פנימית',
					'עיניים',
					'שיניים',
					'לב',
					'פסיכיאטריה',
					'נוירולוגיה',
					'אחר'
				]
			},
			options: {
				responsive: true,
				legend: {
					position: 'right',
				},
				title: {
					display: true,
					text: ''
				},
				scale: {
					ticks: {
						beginAtZero: true
					},
					reverse: false
				},
				animation: {
					animateRotate: false,
					animateScale: true
				}
			}
		};

		window.onload = function() {
			var ctx = document.getElementById('chart-area');
			window.myPolarArea = Chart.PolarArea(ctx, config);
		};

		document.getElementById('randomizeData').addEventListener('click', function() {
			config.data.datasets.forEach(function(piece, i) {
				piece.data.forEach(function(value, j) {
					config.data.datasets[i].data[j] = randomScalingFactor();
				});
			});
			window.myPolarArea.update();
		});

		var colorNames = Object.keys(window.chartColors);
		document.getElementById('addData').addEventListener('click', function() {
			if (config.data.datasets.length > 0) {
				config.data.labels.push('data #' + config.data.labels.length);
				config.data.datasets.forEach(function(dataset) {
					var colorName = colorNames[config.data.labels.length % colorNames.length];
					dataset.backgroundColor.push(window.chartColors[colorName]);
					dataset.data.push(randomScalingFactor());
				});
				window.myPolarArea.update();
			}
		});
		document.getElementById('removeData').addEventListener('click', function() {
			config.data.labels.pop(); // remove the label first
			config.data.datasets.forEach(function(dataset) {
				dataset.backgroundColor.pop();
				dataset.data.pop();
			});
			window.myPolarArea.update();
		});
    </script>
</body>

</html>
