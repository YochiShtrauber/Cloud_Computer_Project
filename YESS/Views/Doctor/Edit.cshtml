@model YESS.Models.DoctorViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/YESS_Layout.cshtml";
}
<!-- breadcrumb start-->
<section class="breadcrumb_part breadcrumb_bg">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <div class="breadcrumb_iner">
                    <div class="breadcrumb_iner_item">
                        <h2>עדכון רופא</h2>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@using (Html.BeginForm("Edit", "Doctor", FormMethod.Post))
{
    @Html.AntiForgeryToken()


<div class="form-horizontal" style="text-align:right" dir="rtl">
    <hr />
    <h2 style="text-align:center">@ViewBag.succeessOrNot</h2>
    <h2 style="text-align:center">@ViewBag.succeessOrNot1</h2>
    <h2 style="text-align:center">@ViewBag.succeessOrNot2</h2>
    <h2 style="text-align:center">@ViewBag.succeessOrNot3</h2>
    <div>
        @if (RouteConfig.helper2 == 1)
        {


            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)
            <div class="form-group">
                @Html.LabelFor(model => model.ID_TZ, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ID_TZ, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                    @Html.EditorFor(model => model.ID_TZ, new { htmlAttributes = new { @class = "form-control", @style = "display:none" } })
                    @Html.ValidationMessageFor(model => model.ID_TZ, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.LicenseNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LicenseNumber, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                    @Html.EditorFor(model => model.LicenseNumber, new { htmlAttributes = new { @class = "form-control", @style = "display:none" } })
                    @Html.ValidationMessageFor(model => model.LicenseNumber, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LasttName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LasttName, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                    @Html.ValidationMessageFor(model => model.LasttName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.EnglishName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EnglishName, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                    @Html.ValidationMessageFor(model => model.EnglishName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <label>סוג מין נוכחי</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                    @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control", @style = "display:none" } })
                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                </div>
            </div>

            <div>
                &nbsp;&nbsp;&nbsp;
                <label for="gender">עדכון מין:</label>
                <select name="patientGender" id="patientGender" class="form-control col-md-10">
                    <option selected="selected">
                        אם הינך רוצה לעדכן את סוג המין &#9757;&#127995;
                        שנה פה
                    </option>
                    <option value="זכר">זכר</option>
                    <option value="נקבה">נקבה</option>

                </select>
                <br><br>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Mail, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Mail, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                    @Html.ValidationMessageFor(model => model.Mail, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.BirthDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                    @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label>תחום התמחות נוכחי</label>
                @Html.LabelFor(model => model.TypeSpecial, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TypeSpecial, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                    @Html.EditorFor(model => model.TypeSpecial, new { htmlAttributes = new { @class = "form-control", @style = "display:none" } })
                    @Html.ValidationMessageFor(model => model.TypeSpecial, "", new { @class = "text-danger" })
                </div>
            </div>
            <div>
                &nbsp;&nbsp;&nbsp;
                <label for="TypeSpecial">עדכון תחום התמחות:</label>
                <select name="typeS" id="typeS" class="form-control col-md-10">
                    <option selected="selected">
                        אם הינך רוצה לעדכן את תחום ההתמחות &#9757;&#127995;
                        שנה פה
                    </option>
                    <option value="ילדים">ילדים</option>
                    <option value="נשים">נשים</option>
                    <option value="משפחה">משפחה</option>
                    <option value="עור">עור</option>
                    <option value="אורטופדיה">אורטופדיה</option>
                    <option value="אף אוזן גרון">אף אוזן גרון</option>
                    <option value="פנימית">פנימית</option>
                    <option value="עיניים">עיניים</option>
                    <option value="שיניים">שיניים</option>
                    <option value="לב">לב</option>
                    <option value="פסיכיאטריה">פסיכיאטריה</option>
                    <option value="נוירולוגיה">נוירולוגיה</option>
                    <option value="אחר">אחר</option>
                </select>
                <br><br>
            </div>


            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <button type="submit" class="button button-contactForm btn_1">עדכון רופא</button>



                    <input type="reset" class="button button-contactForm btn_1">
                </div>
            </div>
        }
    </div>
</div>
}
@if (RouteConfig.helper2 == 0)
{
<div style="text-align:right" dir="rtl">
    &nbsp;&nbsp;&nbsp;
    <a href='@Url.Action("Edit1", "Doctor")' class="button button-contactForm btn_1">חזרה לעדכון נוסף</a>

</div>
}
<div style="text-align:right" dir="rtl">
    &nbsp;&nbsp;&nbsp;
    <a href='@Url.Action("Index", "Home")' class="button button-contactForm btn_1">חזרה לעמוד הראשי</a>

</div>